openapi: 3.0.1
info:
  title: Keeper Service API
  description: Keeper Service is used to work with Products
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'

paths:

  /api/v1/products:

    get:
      summary: Returns all products
      tags:
        - ProductController
      responses:
        '200':
          description: Successfully returned products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDtoList'

    post:
      summary: Adds a product
      tags:
        - ProductController
      requestBody:
        $ref: '#/components/requestBodies/AddProductRequestDto'
      responses:
        '200':
          description: Successfully added product
          content:
            application/json:
              schema:
                $ref: '#/components/responses/AddProductResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ExceptionResponseDto'

  /api/v1/products/{code}:

    get:
      summary: Returns product with given code
      tags:
        - ProductController
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully returned product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ExceptionResponseDto'

    delete:
      summary: Delete product with given code
      tags:
        - ProductController
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted product
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ExceptionResponseDto'


  /api/v1/products/{productCode}/image:

    post:
      summary: Adds an image for the product with given code
      tags:
        - ProductController
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: image
          in: query
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Successfully added product
          content:
            application/json:
              schema:
                $ref: '#/components/responses/AddProductResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ExceptionResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ExceptionResponseDto'

components:

  # REUSABLE SCHEMAS
  schemas:

    ImageDto:
      type: object
      required:
        - uri
        - key
      properties:
        uri:
          description: Image URI
          type: string
        key:
          description: Image key
          type: string

    ImageDtoList:
      type: object
      required:
        - imageDtoList
      properties:
        imageDtoList:
          description: List of all Image DTOs for a specific product
          type: array
          items:
            $ref: '#/components/schemas/ImageDto'

    ProductDto:
      type: object
      required:
        - code
        - name
        - description
        - price
        - imageUriList
      properties:
        code:
          description: Product code
          type: string
        name:
          description: Product name
          type: string
        description:
          description: Product description
          type: string
        price:
          description: Product price
          type: integer
        imageUriList:
          description: List of Image URIs for a specific product
          type: array
          items:
            type: string

    ProductDtoList:
      type: object
      required:
        - productDtoList
      properties:
        productDtoList:
          description: List of Product DTOs
          type: array
          items:
            $ref: '#/components/schemas/ProductDto'


  # REUSABLE RESPONSES
  responses:
    ExceptionResponseDto:
      description: Unified Exception Response DTO
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - timestamp
            properties:
              message:
                description: Exception message
                type: string
              timestamp:
                description: Exception timestamp
                type: string
                format: 'date-time'
              stackTrace:
                description: Exception stacktrace (only in case of unexpected exception)
                type: array
                items:
                  type: string

    AddProductResponseDto:
      description: Response DTO in case of successful adding product
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - name
              - description
              - price
            properties:
              code:
                description: Product code
                type: string
                example: 7dd7360f-af3f-42a2-8615-b11dc7b69b2b
              name:
                description: Product name
                type: string
                example: AMD Ryzen 7 PRO 5750G, SocketAM4, OEM
              description:
                description: Product description
                type: string
                example: General Specifications
              price:
                description: Product price
                type: integer
                example: 500

  # REUSABLE REQUEST BODIES
  requestBodies:
    AddProductRequestDto:
      description: Request to add a new product
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - description
              - price
            properties:
              name:
                description: Product name
                type: string
                nullable: false
                minLength: 10
                maxLength: 100
                example: AMD Ryzen 7 PRO 5750G, SocketAM4, OEM
              description:
                description: Product description
                type: string
                nullable: false
                minLength: 10
                maxLength: 1000
                example: General Specifications
              price:
                description: Product price
                type: integer
                nullable: false
                example: 500
